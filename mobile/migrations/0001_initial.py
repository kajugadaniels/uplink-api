# Generated by Django 5.0 on 2025-03-31 17:35

import django.db.models.deletion
import imagekit.models.fields
import mobile.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the post.', max_length=255)),
                ('description', models.TextField(help_text='Enter the content or description of the post.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the post was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the post was last updated.')),
                ('category', models.ForeignKey(help_text='Select the category for the post.', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='base.category')),
                ('user', models.ForeignKey(blank=True, help_text='Select the non-staff user who created this post.', limit_choices_to={'is_staff': False}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='The content of the comment.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time when the comment was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The time when the comment was last updated.')),
                ('post', models.ForeignKey(help_text='The post that this comment is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='mobile.post')),
                ('user', models.ForeignKey(help_text='The user who made the comment.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=mobile.models.post_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the image was uploaded.')),
                ('post', models.ForeignKey(help_text='The post to which this image is associated.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mobile.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the like was created.')),
                ('post', models.ForeignKey(help_text='The post that is liked.', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='mobile.post')),
                ('user', models.ForeignKey(help_text='The user who liked the post.', on_delete=django.db.models.deletion.CASCADE, related_name='post_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Like',
                'verbose_name_plural': 'Post Likes',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'post')},
            },
        ),
    ]
